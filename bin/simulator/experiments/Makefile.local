NO_AUTO_COMPILING = yes
SHELL = bash # for pipefail
EXPS := $(wildcard $(this_srcdir)*.exp)
BASES := $(notdir $(basename $(EXPS)))
RESULTS := $(addsuffix .results,$(BASES))
ESTABLISHED := $(foreach base,$(BASES),$(this_srcdir)$(base).established)
COMPARES := $(addsuffix .compare,$(BASES))

NUM_TRIALS := 100
NUM_STD_HANDS := 1000
NUMS := $(shell seq -w 0 $$(($(NUM_STD_HANDS)-1)))

HAND_NUMS := $(addprefix hands/,$(NUMS))
RESULTS_NUMS := $(foreach result,$(RESULTS),$(addprefix $(result).,$(NUMS)))

SIM := ../konig-simulator

test: $(RESULTS)

compare: $(COMPARES)
	wc $(COMPARES)

reestablish: $(ESTABLISHED)

$(HAND_NUMS): hands/%: $(SIM)
	mkdir -p $(dir $@)
	$< -p- -m -s $* | cut -d , -f 1 | sed 's/ $$//' | tr ' \n' '_ ' > $@

define MAKE_RESULTS
$(1)_RESULTS_NUMS := $(addprefix $(1)/results.,$(NUMS))
$(1)_FULL_NUMS := $(addprefix $(1).full.,$(NUMS))
$$($(1)_RESULTS_NUMS): $(1)/results.%: $(this_srcdir)$(1).exp hands/% \
		$(this_srcdir)Makefile.local
	mkdir -p $$(dir $$@)
	printf "%s " "$$*" > $$@
	set -o pipefail && \
		cat hands/$$* >> $$@
	set -o pipefail && \
		$(SIM) -a "`cat $$<`" -c "`cat hands/$$*`" -n $(NUM_TRIALS) -s "$$*" \
		-d- -t- -# | \
		awk ' \
			/^[-a-z/+!6123]*$$$$/ { outcomes[$$$$0]++ } \
			/^[-0-9 ]*$$$$/ { total_score += $$$$1; num_hands++ } \
			END { \
				printf("%f", total_score/num_hands); \
				for (outcome in outcomes) \
					printf(" %d %s", outcomes[outcome], outcome); \
			} \
		' >> $$@
	echo >> $$@

$$($(1)_FULL_NUMS): $(1).full.%: \
		$(this_srcdir)$(1).exp hands/% $(this_srcdir)Makefile.local
	$(SIM) -a "`cat $$<`" -c "`cat hands/$$*`" \
		-n $(NUM_TRIALS) -s "$$*" -f -g -t- -# > $$@

$(1).results: $$($(1)_RESULTS_NUMS)
	cat $$^ > $$@
endef

$(foreach base,$(BASES),$(eval $(call MAKE_RESULTS,$(base))))

$(ESTABLISHED): $(this_srcdir)%.established: %.results
	cp $< $@

$(COMPARES): %.compare: %.results $(this_srcdir)compare.awk
	awk -v results=$< -f $(this_srcdir)compare.awk \
		$< $(this_srcdir)$*.established > $@


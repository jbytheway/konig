SUMMARY_FORMAT := "%s %h0,%d,%r %m%f"
HANDS := hand_and_talons
FEATS := f

include ../experiments.mk

FEATURES := $(addsuffix .features,$(BASES))
FEAT_BASES := $(foreach feat,$(FEATS),$(addsuffix .$(feat),$(BASES)))
FEAT_RESULTS := $(addsuffix .results,$(FEAT_BASES))
TRAININGS := $(addsuffix .training,$(FEAT_BASES))
MODELS := $(addsuffix .model,$(FEAT_BASES))

test: announcer-model

$(FEATURES): %.features: %.results $(FEAT)
	cut -d ' ' -f 1-2 $< | $(FEAT) - > $@

$(FEAT_RESULTS): %.results: extract_feat_results.awk $(RESULTS)
	awk -f $< -v feat=$(patsubst .%,%,$(suffix $*)) $(basename $*).results > $@

$(TRAININGS): %.training: %.results $(FEATURES)
	{ echo score; cut -d ' ' -f 2 $*.results; } | \
		paste -d ' ' - $(basename $*).features | column -t > $@

$(MODELS): %.model: %.training ../fitModel.R
	../fitModel.R $< $@ $*.predictions decision

announcer-model: $(MODELS) Makefile.local
	{ \
		printf "contract feat (Threshold) "; \
		head -n 1 $(word 1,$(FEATURES)) | cut -d ' ' -f 2-; \
		for i in $(MODELS); do \
			printf "$${i%.model} " | sed 's/\./ /'; \
			tail -n 1 $$i; \
		done \
	} | column -t > $@

